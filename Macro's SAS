libname orion "/courses/d0f434e5ba27fe300/mac1";

/*1*/
%macro custtype(type) / minoperator;
   %let type=%upcase(&type);
   %If &Type=  %THEN %do;
   	%put Error: You must provide a value for Type;
   	%put Error: Valid values are INTERNET or GOLD;
   %end;
   %else %if &type in GOLD INTERNET %then %Do; 
    proc print data=orion.customer_dim;
       var Customer_Group Customer_Name Customer_Gender  
           Customer_Age;
       where upcase(Customer_Group) contains "&type";
       title "&type Customers";
    run;
   %end;
 %else %do;
 	%put Error: Value of TYPE: &type is not valid.;
 	%put Error: Valid values are INTERNET or GOLD.;
 %end;
%mend custtype;

options nomprint nomlogic;
%custtype(xxxxx);
%custtype(INTERNET);
%custtype();

/*2*/

%macro listing(custtype) / minoperator;
 %IF &custtype= %THEN %DO;
 	 proc print data= orion.customer noobs;  
 	 var Customer_ID Customer_Name Customer_Type_ID;
 	 title "All Customers";      
 	 run; 
 %end;
 %else %do;
	proc sql noprint;
	select distinct Customer_Type_id
	into :Idlist separated by ' '
	from orion.customer_type
	;
	quit;
 %if &custtype in &Idlist %then %do;          
  proc print data= orion.customer noobs;          
  where Customer_Type_ID =&custtype;           
  var Customer_ID Customer_Name;           
  title "Customer Type: &custtype";          
  run;      
 %end;      
 %else %do;          
  %put ERROR: Invalid CUSTTYPE.;
  %put ERROR- Valid CUSTTYPEs: &Idlist..;      
 %end;
%end; 
%mend listing;
%listing(2010);
%listing();

/*3*/
%macro generatecode(bartype=vbar, dims=3d, 
                    var=Customer_Age_Group, color=pink, 
                    surface=s)/minoperator; 
;
%let numerrors=0;

%let bartype=%upcase(&bartype);
%if not (&bartype in VBAR HBAR) %then %do;
%let numerrors=%eval(&numerrors+1);                   
%put ERROR: Invalid Bar Type was supplied.;
%put Valid Values are VBAR or HBAR.;
%end;

%let dims=%upcase(&dims);
%if not (&dims in 3D NULL) %then %do;
%let numerrors=%eval(&numerrors+1);                   
%put ERROR: Invalid Dimension Value.;
%put The value can be 3D or a null value. ;
%end;
     
%let surface=%upcase(&surface);
%if not (&surface in S X1 X2 X3 X4 X5) %then %do;
%let numerrors=%eval(&numerrors+1);                   
%put ERROR: Invalid Surface Value.;
%put The value can be S,X1,X2,X3,X4,X5. ;
%end;

%if &numerrors=0 %then %do;
proc gchart data=orion.customer_dim;
   &bartype&dims &var;
       pattern color=&color value=&surface;
    run;
%end;

%else 
%put ERROR: Due to parameter errors SAS code will not execute.;
%put You have &numerrors errors.;

%mend generatecode;

/*4*/

%macro ordertype;
data _null_;
   set orion.lookup_order_type end=last;
   call symputx('type'||left(_n_), LABEL);
   if last then call symputx('endloop', _n_);
run;
%do num=1 %to &endloop;
    proc means data=orion.order_fact sum mean maxdec=2;
    where Order_Type=&num;
    var Total_Retail_Price CostPrice_Per_Unit;
    title "Order Type: &&type&num";
    run;
%end;

%mend ordertype; 
 
%ordertype;

/*5*/

%macro tops(obs=3);   
 proc means data=orion.order_fact sum nway noprint;
  var Total_Retail_Price;       
  class Customer_ID;       
  output out=customer_freq sum=sum;    
 run; 
 proc sort data=customer_freq;      
  by descending sum;    
 run; 
 data _null_;       
  set customer_freq(obs=&obs);       
  call symputx('top'||left(_n_), Customer_ID);    
 run; 
 proc print data=orion.customer_dim noobs;     
  where Customer_ID in (%do num=1 %to &obs; &&top&num %end;); 
  var Customer_ID Customer_Name Customer_Type;     
  title "Top &obs Customers";   
 run; 
%mend tops; 
 
%tops();
%tops(obs=5);

/*6*/

%macro memberlist(custtype);
   proc print data=Orion.Customer_dim;
      var Customer_Name Customer_ID Customer_Age_Group;
      where Customer_Type="&custtype";
      title "A List of &custtype";
   run;
%mend memberlist;

%macro listall;
   data _null_;
      set orion.customer_type end=final;
      call symputx('type'||left(_n_), Customer_Type);
      if final then call symputx('n',_n_);
   run;
   %do num=1 %to &n;  
   %memberlist(&&type&num)
   %end;
%mend listall;

%listall

/*7
a. global
b. local
c. local
d. local
*/

/*8*/
%macro varscope;    
 data _null_;       
 set orion.customer_type end=final;       
 call symputx('localtype'||left(_n_), Customer_Type,'L');       
 if final then call symputx('localn',_n_,'L');    
 run;    
 %put _user_; 
%mend varscope; 
%varscope 


%macro varscope;
 %local x;
   data _null_;
      set orion.customer_type end=final;
      call symputx('localtype'||left(_n_), Customer_Type);
      if final then call symputx('localn',_n_);
   run;
   %put _user_;
%mend varscope;

%varscope;

/*stored locally*/

%macro varscope;
   data _null_;
      set orion.customer_type end=final;
      call symputx('localtype'||left(_n_), Customer_Type, 'G');
      if final then call symputx('localn',_n_, 'G');
   run;
   %put _user_;
%mend varscope;

%varscope;

/*9*/

%macro createmacvar; 
data _null_;       
set orion.lookup_order_type end=last;       
call symputx('type'||left(start), label);       
if last then call symputx('endloop', _n_);    
run; 
%mend createmacvar;  


%macro sumreport;    
%local type1 type2 type3 endloop num;    
%createmacvar    
%do num=1 %to &endloop;      
proc means data=orion.order_fact sum mean maxdec=2;      
where Order_Type = &num;      
var Total_Retail_Price CostPrice_Per_Unit;     
title "Summary Report for &&type&num..s";       
run;    
%end; 
%mend sumreport; 
%sumreport
